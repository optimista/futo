diff --git a/node_modules/@mui/material/Container/Container.js b/node_modules/@mui/material/Container/Container.js
index b82d5d3..5f7a527 100644
--- a/node_modules/@mui/material/Container/Container.js
+++ b/node_modules/@mui/material/Container/Container.js
@@ -1,9 +1,10 @@
 import PropTypes from 'prop-types';
+import * as React from 'react';
 import { createContainer } from '@mui/system';
 import capitalize from '../utils/capitalize';
 import styled from '../styles/styled';
 import useThemeProps from '../styles/useThemeProps';
-const Container = createContainer({
+const ContainerRoot = createContainer({
   createStyledComponent: styled('div', {
     name: 'MuiContainer',
     slot: 'Root',
@@ -19,6 +20,7 @@ const Container = createContainer({
     name: 'MuiContainer'
   })
 });
+const Container = props => React.createElement(ContainerRoot, props);
 process.env.NODE_ENV !== "production" ? Container.propTypes /* remove-proptypes */ = {
   // ----------------------------- Warning --------------------------------
   // | These PropTypes are generated from the TypeScript type definitions |
diff --git a/node_modules/@mui/material/CssBaseline/CssBaseline.js b/node_modules/@mui/material/CssBaseline/CssBaseline.js
index 2a612c5..37b4a56 100644
--- a/node_modules/@mui/material/CssBaseline/CssBaseline.js
+++ b/node_modules/@mui/material/CssBaseline/CssBaseline.js
@@ -75,11 +75,11 @@ function CssBaseline(inProps) {
     children,
     enableColorScheme = false
   } = props;
-  return /*#__PURE__*/_jsxs(React.Fragment, {
+  return React.createElement(React.Fragment, { children: _jsxs(React.Fragment, {
     children: [/*#__PURE__*/_jsx(GlobalStyles, {
       styles: theme => styles(theme, enableColorScheme)
     }), children]
-  });
+  }) });
 }
 process.env.NODE_ENV !== "production" ? CssBaseline.propTypes /* remove-proptypes */ = {
   // ----------------------------- Warning --------------------------------
