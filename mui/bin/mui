#!/bin/zsh

dir=$HOME/.bin/mui

case $1 in
  check)
    wget -q -O /tmp/_app.js https://raw.githubusercontent.com/mui-org/material-ui/master/examples/nextjs/pages/_app.js
    wget -q -O /tmp/_document.js https://raw.githubusercontent.com/mui-org/material-ui/master/examples/nextjs/pages/_document.js
    wget -q -O /tmp/theme.js https://raw.githubusercontent.com/mui-org/material-ui/master/examples/nextjs/src/theme.js

    diff -u $dir/latest/pages/_app.js /tmp/_app.js &&
    diff -u $dir/latest/pages/_document.js /tmp/_document.js &&
    diff -u $dir/latest/src/theme.js /tmp/theme.js 
    ;;
  rm)
    name=$2

    grep -q '"chromatic": "npx chromatic --project-token=' "$name/package.json"
    chr_rm=$?

    gl rm $name
    vc rm $name

    if [ "$chr_rm" -eq 0 ]; then
      url=https://www.chromatic.com
      open $url
      echo "\n// CHROMATIC REMOVAL"
      echo "Don't forget to remove your project '$name' from chromatic! I opened the URL for you."
      echo
    fi
    ;;
  *)
    if mui check; then
      name=$1
      ccname=${${(C)name}//-} # camel case name
      chromatic=true
      
      for arg in "$@"; do
        case $arg in
          --without-chromatic)
            chromatic=false
            ;;
        esac
      done
   
      vc $name 
      cd $name

      ### CORE
      # prepare app folder 
      mkdir app
      npm install path
      cp $dir/src/.gitignore $dir/src/next.config.js .
      
      # install @mui/material
      npm install @emotion/react @emotion/server @emotion/styled @futo-ui/hooks @futo-ui/utils @mui/icons-material @mui/lab @mui/material nprogress --legacy-peer-deps 
      cp -r $dir/src/app/core app
      cp -r $dir/src/styles . 
      cp -r $dir/src/pages . 
      sed -i '' -e "s/my-app/$name/" -e "s/MyApp/$ccname/" app/core/i18n/NAMES.js
      sed -i '' "s/MyApp/"$ccname"App/" pages/_app.js
      sed -i '' "s/MyDocument/"$ccname"Document/g" pages/_document.js # change name of Document class

      # storybook
      cd .. && gl $name && cd $name
      npm install babel-plugin-import storybook-addon-next-router --legacy-peer-deps
      npm install npm-add-script patch-package --save-dev
      npx npm-add-script -k "postinstall" -v "patch-package --patch-dir .storybook/patches" # You might want to extend patches to whole project by moving it to root of the project - cp -r $dir/src/patches .
      $dir/exp/storybook-init

      DIFF1=$(diff $dir/latest/.storybook/main.js .storybook/main.js)
      DIFF2=$(diff $dir/latest/.storybook/preview.js .storybook/preview.js)
      if [ "$DIFF1" != "" ]; then
        echo "There is a new .storybook/main.js! We already copied our version, but check the differences and maybe update our version."
        echo "\n$DIFF1\n"
        cp .storybook/main.js $dir/latest/.storybook/main.js
      fi
      if [ "$DIFF2" != "" ]; then
        echo "There is a new .storybook/preview.js! We already copied our version, but check the differences and maybe update our version."
        echo "\n$DIFF2\n"
        cp .storybook/preview.js $dir/latest/.storybook/preview.js
      fi

      cp -r $dir/src/.storybook/* .storybook/ # If you move patches to the root, "-r" option is not necessary anymore
      rm -rf stories && cp -r $dir/src/storybook . 
      npm run postinstall # patching

      $chromatic && chr $name
      
      echo "================" 
      echo "Mui is finished." 
      echo "================" 
      echo
    else
      echo
      mv /tmp/_app.js $dir/latest/pages/_app.js
      mv /tmp/_document.js $dir/latest/pages/_document.js
      mv /tmp/theme.js $dir/latest/src/theme.js
      echo "=> Update _app.js | _document.js | theme.js!"
      echo "[in $dir/src according to $dir/latest]"
      echo 
      echo "=> RUN: vim -p $dir/latest/pages/_app.js $dir/src/pages/_app.js $dir/latest/pages/_document.js $dir/src/pages/_document.js $dir/latest/src/theme.js $dir/src/app/utils/theme.js"
      exit 1
    fi
esac
